# Copy these contents into the root directory of your Github project in a file
# named .travis.yml

# Use new container infrastructure to enable caching
sudo: false

# Choose a lightweight base image; we provide our own build tools.
language: c

# Caching so the next build will be fast too.
cache:
  directories:
  - $HOME/.ghc
  - $HOME/.cabal

matrix:
  include:
  # We grab the appropriate GHC and cabal-install versions from hvr's PPA. See:
  # https://github.com/hvr/multi-ghc-travis
  - env: BUILD=cabal GHCVER=8.0.1 CABALVER=1.24
    compiler: ": #GHC 8.0.1"
    addons: {apt: {packages: [cabal-install-1.24,ghc-8.0.1,happy-1.19.5,protobuf-c-compiler], sources: [hvr-ghc]}}


  # Build with the newest GHC and cabal-install. This is an accepted failure,
  # see below.
  - env: BUILD=cabal GHCVER=head  CABALVER=head
    compiler: ": #GHC HEAD"
    addons: {apt: {packages: [cabal-install-head,ghc-head], sources: [hvr-ghc]}}

  allow_failures:
  - env: BUILD=cabal GHCVER=head  CABALVER=head

before_install:
# Using compiler above sets CC to an invalid value, so unset it
- unset CC

# We want to always allow newer versions of packages when building on GHC HEAD
- CABALARGS=""
- if [ "x$GHCVER" = "xhead" ]; then CABALARGS=--allow-newer; fi

- export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.local/bin:$PATH:/opt/happy/1.19.5/bin

install:
- echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
- if [ -f configure.ac ]; then autoreconf -i; fi
- |
  cabal --version
  travis_retry cabal update
  cabal install --only-dependencies --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS

script:
- |
  cabal configure --enable-tests --enable-benchmarks -v2 --ghc-options="-O0 -Werror"
  cabal build
  cabal check || [ "$CABALVER" == "1.16" ]
  cabal test && cat dist/test/emu-mos6502-0.0.1-emu-mos6502-test.log
  cabal bench
  cabal sdist
  cabal copy
  SRC_TGZ=$(cabal info . | awk '{print $2;exit}').tar.gz && \
    (cd dist && cabal install --force-reinstalls "$SRC_TGZ")
